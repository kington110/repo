import streamlit as st
import openai
import os
import requests
from PIL import Image
from io import BytesIO

# ƒê·∫∑t API key c·ªßa b·∫°n ·ªü ƒë√¢y ho·∫∑c d√πng bi·∫øn m√¥i tr∆∞·ªùng
openai.api_key = os.getenv("OPENAI_API_KEY") or "YOUR_API_KEY_HERE"

st.title("üé® T·∫°o ·∫¢nh H√†ng Lo·∫°t v·ªõi Prompt")
st.markdown("Nh·∫≠p danh s√°ch prompt b√™n d∆∞·ªõi, m·ªói d√≤ng l√† m·ªôt m√¥ t·∫£ ·∫£nh.")

prompt_input = st.text_area("üìã Danh s√°ch Prompt", height=200)

col1, col2, col3 = st.columns(3)

with col1:
    size_option = st.selectbox("üñºÔ∏è K√≠ch th∆∞·ªõc ·∫£nh", ["1024x1024", "1024x1792", "1792x1024"])

with col2:
    style_option = st.selectbox("üé® Phong c√°ch ·∫£nh", ["M·∫∑c ƒë·ªãnh", "Phong c√°ch minh h·ªça", "Phong c√°ch tranh s∆°n d·∫ßu", "Phong c√°ch ho·∫°t h√¨nh", "·∫¢nh hi·ªán th·ª±c"])

with col3:
    format_option = st.selectbox("üìÅ ƒê·ªãnh d·∫°ng ·∫£nh", ["PNG", "JPEG"])

button = st.button("üöÄ T·∫°o ·∫¢nh")

# H√†m x·ª≠ l√Ω style d·∫°ng th√™m v√†o prompt
style_map = {
    "M·∫∑c ƒë·ªãnh": "",
    "Phong c√°ch minh h·ªça": ", illustration style",
    "Phong c√°ch tranh s∆°n d·∫ßu": ", oil painting style",
    "Phong c√°ch ho·∫°t h√¨nh": ", cartoon style",
    "·∫¢nh hi·ªán th·ª±c": ", realistic photo style"
}

if button and prompt_input:
    prompts = [p.strip() for p in prompt_input.split("\n") if p.strip()]

    for i, prompt in enumerate(prompts):
        full_prompt = prompt + style_map.get(style_option, "")
        with st.spinner(f"ƒêang t·∫°o ·∫£nh {i+1}/{len(prompts)}..."):
            try:
                response = openai.images.generate(
                    model="dall-e-3",
                    prompt=full_prompt,
                    n=1,
                    size=size_option
                )
                image_url = response.data[0].url

                # T·∫£i ·∫£nh v·ªÅ t·ª´ URL
                img_response = requests.get(image_url)
                image = Image.open(BytesIO(img_response.content))

                # Hi·ªÉn th·ªã ·∫£nh
                st.image(image, caption=f"Prompt {i+1}: {prompt}", use_column_width=True)

                # T·∫£i v·ªÅ theo ƒë·ªãnh d·∫°ng
                img_bytes = BytesIO()
                image.save(img_bytes, format=format_option)
                st.download_button(
                    label=f"üì• T·∫£i ·∫£nh {format_option}",
                    data=img_bytes.getvalue(),
                    file_name=f"image_{i+1}.{format_option.lower()}",
                    mime=f"image/{format_option.lower()}"
                )

            except Exception as e:
                st.error(f"L·ªói v·ªõi prompt {i+1}: {e}")

st.markdown("---")
st.info("·ª®ng d·ª•ng n√†y s·ª≠ d·ª•ng OpenAI DALL¬∑E 3. H√£y ƒë·∫£m b·∫£o b·∫°n c√≥ API key h·ª£p l·ªá.")
